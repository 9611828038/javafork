package tech.deplant.java4ever.ffi;
// Generated by jextract

import jdk.incubator.foreign.*;

import java.lang.invoke.MethodHandle;

import static jdk.incubator.foreign.CLinker.*;

public final class ton_client {

    public static final ValueLayout int64_t = C_LONG_LONG;
    public static final ValueLayout int_least64_t = C_LONG_LONG;
    public static final ValueLayout int_fast64_t = C_LONG_LONG;
    public static final ValueLayout int32_t = C_INT;
    public static final ValueLayout int_least32_t = C_INT;
    public static final ValueLayout int_fast32_t = C_INT;
    public static final ValueLayout int16_t = C_SHORT;
    public static final ValueLayout int_least16_t = C_SHORT;
    public static final ValueLayout int_fast16_t = C_SHORT;
    public static final ValueLayout intptr_t = C_LONG_LONG;
    public static final ValueLayout intmax_t = C_LONG_LONG;
    static final SymbolLookup LIBRARIES = SymbolLookup.loaderLookup();    /* package-private */
    static final FunctionDescriptor tc_create_context$FUNC = FunctionDescriptor.of(C_POINTER,
            tc_string_data_t.$struct$LAYOUT
    );
    //static final SymbolLookup LIBRARIES = name -> SymbolLookup.loaderLookup().lookup(name).or(() -> CLinker.systemLookup().lookup(name));    /* package-private */
    static final MethodHandle tc_create_context$MH = LinkerApi.downcallHandle(
            LIBRARIES, "tc_create_context",
            "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
            tc_create_context$FUNC, false
    );
    static final FunctionDescriptor tc_destroy_context$FUNC = FunctionDescriptor.ofVoid(
            C_INT
    );
    static final MethodHandle tc_destroy_context$MH = LinkerApi.downcallHandle(
            LIBRARIES, "tc_destroy_context",
            "(I)V",
            tc_destroy_context$FUNC, false
    );
    static final FunctionDescriptor tc_request$FUNC = FunctionDescriptor.ofVoid(
            C_INT,
            tc_string_data_t.$struct$LAYOUT,
            tc_string_data_t.$struct$LAYOUT,
            C_INT,
            C_POINTER
    );
    static final MethodHandle tc_request$MH = LinkerApi.downcallHandle(
            LIBRARIES, "tc_request",
            "(ILjdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;ILjdk/incubator/foreign/MemoryAddress;)V",
            tc_request$FUNC, false
    );
    static final FunctionDescriptor tc_request_ptr$FUNC = FunctionDescriptor.ofVoid(
            C_INT,
            tc_string_data_t.$struct$LAYOUT,
            tc_string_data_t.$struct$LAYOUT,
            C_POINTER,
            C_POINTER
    );
    static final MethodHandle tc_request_ptr$MH = LinkerApi.downcallHandle(
            LIBRARIES, "tc_request_ptr",
            "(ILjdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
            tc_request_ptr$FUNC, false
    );
    static final FunctionDescriptor tc_request_sync$FUNC = FunctionDescriptor.of(C_POINTER,
            C_INT,
            tc_string_data_t.$struct$LAYOUT,
            tc_string_data_t.$struct$LAYOUT
    );
    static final MethodHandle tc_request_sync$MH = LinkerApi.downcallHandle(
            LIBRARIES, "tc_request_sync",
            "(ILjdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
            tc_request_sync$FUNC, false
    );
    static final FunctionDescriptor tc_read_string$FUNC = FunctionDescriptor.of(
            tc_string_data_t.$struct$LAYOUT,
            C_POINTER
    );
    static final MethodHandle tc_read_string$MH = LinkerApi.downcallHandle(
            LIBRARIES, "tc_read_string",
            "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
            tc_read_string$FUNC, false
    );
    static final FunctionDescriptor tc_destroy_string$FUNC = FunctionDescriptor.ofVoid(
            C_POINTER
    );
    static final MethodHandle tc_destroy_string$MH = LinkerApi.downcallHandle(
            LIBRARIES, "tc_destroy_string",
            "(Ljdk/incubator/foreign/MemoryAddress;)V",
            tc_destroy_string$FUNC, false
    );

    static {
    }

    ton_client() {
    }

    public static int true_() {
        return (int) 1L;
    }

    public static int false_() {
        return (int) 0L;
    }

    public static int __bool_true_false_are_defined() {
        return (int) 1L;
    }

    public static int tc_response_success() {
        return (int) 0L;
    }

    public static int tc_response_error() {
        return (int) 1L;
    }

    public static int tc_response_nop() {
        return (int) 2L;
    }

    public static int tc_response_app_request() {
        return (int) 3L;
    }

    public static int tc_response_app_notify() {
        return (int) 4L;
    }

    public static int tc_response_custom() {
        return (int) 100L;
    }

    public static MemoryAddress tc_create_context(MemorySegment config) {
        var mh$ = LinkerApi.requireNonNull(tc_create_context$MH, "tc_create_context");
        try {
            return (jdk.incubator.foreign.MemoryAddress) mh$.invokeExact(config);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static void tc_destroy_context(int context) {
        var mh$ = LinkerApi.requireNonNull(tc_destroy_context$MH, "tc_destroy_context");
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static void tc_request(int context, MemorySegment function_name, MemorySegment function_params_json, int request_id, Addressable response_handler) {
        var mh$ = LinkerApi.requireNonNull(tc_request$MH, "tc_request");
        try {
            mh$.invokeExact(context, function_name, function_params_json, request_id, response_handler.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static void tc_request_ptr(int context, MemorySegment function_name, MemorySegment function_params_json, Addressable request_ptr, Addressable response_handler) {
        var mh$ = LinkerApi.requireNonNull(tc_request_ptr$MH, "tc_request_ptr");
        try {
            mh$.invokeExact(context, function_name, function_params_json, request_ptr.address(), response_handler.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MemoryAddress tc_request_sync(int context, MemorySegment function_name, MemorySegment function_params_json) {
        var mh$ = LinkerApi.requireNonNull(tc_request_sync$MH, "tc_request_sync");
        try {
            return (jdk.incubator.foreign.MemoryAddress) mh$.invokeExact(context, function_name, function_params_json);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MemorySegment tc_read_string(SegmentAllocator allocator, Addressable handle) {
        var mh$ = LinkerApi.requireNonNull(tc_read_string$MH, "tc_read_string");
        try {
            return (jdk.incubator.foreign.MemorySegment) mh$.invokeExact(allocator, handle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MemorySegment tc_read_string(ResourceScope scope, Addressable handle) {
        return tc_read_string(SegmentAllocator.ofScope(scope), handle.address());
    }

    public static void tc_destroy_string(Addressable handle) {
        var mh$ = LinkerApi.requireNonNull(tc_destroy_string$MH, "tc_destroy_string");
        try {
            mh$.invokeExact(handle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static long INT64_MAX() {
        return 9223372036854775807L;
    }

    public static long INT64_MIN() {
        return -9223372036854775808L;
    }

    public static long UINT64_MAX() {
        return -1L;
    }

    public static long __INT_LEAST64_MIN() {
        return -9223372036854775808L;
    }

    public static long __INT_LEAST64_MAX() {
        return 9223372036854775807L;
    }

    public static long __UINT_LEAST64_MAX() {
        return -1L;
    }

    public static int __INT_LEAST32_MIN() {
        return (int) -2147483648L;
    }

    public static int __INT_LEAST32_MAX() {
        return (int) 2147483647L;
    }

    public static int __UINT_LEAST32_MAX() {
        return (int) 4294967295L;
    }

    public static int __INT_LEAST16_MIN() {
        return (int) -32768L;
    }

    public static int __INT_LEAST16_MAX() {
        return (int) 32767L;
    }

    public static int __UINT_LEAST16_MAX() {
        return (int) 65535L;
    }

    public static int __INT_LEAST8_MIN() {
        return (int) -128L;
    }

    public static int __INT_LEAST8_MAX() {
        return (int) 127L;
    }

    public static int __UINT_LEAST8_MAX() {
        return (int) 255L;
    }

    public static long INT_LEAST64_MIN() {
        return -9223372036854775808L;
    }

    public static long INT_LEAST64_MAX() {
        return 9223372036854775807L;
    }

    public static long UINT_LEAST64_MAX() {
        return -1L;
    }

    public static long INT_FAST64_MIN() {
        return -9223372036854775808L;
    }

    public static long INT_FAST64_MAX() {
        return 9223372036854775807L;
    }

    public static long UINT_FAST64_MAX() {
        return -1L;
    }

    public static int INT32_MAX() {
        return (int) 2147483647L;
    }

    public static int INT32_MIN() {
        return (int) -2147483648L;
    }

    public static int UINT32_MAX() {
        return (int) 4294967295L;
    }

    public static int INT_LEAST32_MIN() {
        return (int) -2147483648L;
    }

    public static int INT_LEAST32_MAX() {
        return (int) 2147483647L;
    }

    public static int UINT_LEAST32_MAX() {
        return (int) 4294967295L;
    }

    public static int INT_FAST32_MIN() {
        return (int) -2147483648L;
    }

    public static int INT_FAST32_MAX() {
        return (int) 2147483647L;
    }

    public static int UINT_FAST32_MAX() {
        return (int) 4294967295L;
    }

    public static int INT16_MAX() {
        return (int) 32767L;
    }

    public static int INT16_MIN() {
        return (int) -32768L;
    }

    public static int UINT16_MAX() {
        return (int) 65535L;
    }

    public static int INT_LEAST16_MIN() {
        return (int) -32768L;
    }

    public static int INT_LEAST16_MAX() {
        return (int) 32767L;
    }

    public static int UINT_LEAST16_MAX() {
        return (int) 65535L;
    }

    public static int INT_FAST16_MIN() {
        return (int) -32768L;
    }

    public static int INT_FAST16_MAX() {
        return (int) 32767L;
    }

    public static int UINT_FAST16_MAX() {
        return (int) 65535L;
    }

    public static int INT8_MAX() {
        return (int) 127L;
    }

    public static int INT8_MIN() {
        return (int) -128L;
    }

    public static int UINT8_MAX() {
        return (int) 255L;
    }

    public static int INT_LEAST8_MIN() {
        return (int) -128L;
    }

    public static int INT_LEAST8_MAX() {
        return (int) 127L;
    }

    public static int UINT_LEAST8_MAX() {
        return (int) 255L;
    }

    public static int INT_FAST8_MIN() {
        return (int) -128L;
    }

    public static int INT_FAST8_MAX() {
        return (int) 127L;
    }

    public static int UINT_FAST8_MAX() {
        return (int) 255L;
    }

    public static long INTPTR_MIN() {
        return -9223372036854775808L;
    }

    public static long INTPTR_MAX() {
        return 9223372036854775807L;
    }

    public static long UINTPTR_MAX() {
        return -1L;
    }

    public static long PTRDIFF_MIN() {
        return -9223372036854775808L;
    }

    public static long PTRDIFF_MAX() {
        return 9223372036854775807L;
    }

    public static long SIZE_MAX() {
        return -1L;
    }

    public static long INTMAX_MIN() {
        return -9223372036854775808L;
    }

    public static long INTMAX_MAX() {
        return 9223372036854775807L;
    }

    public static long UINTMAX_MAX() {
        return -1L;
    }

    public static int SIG_ATOMIC_MIN() {
        return (int) -2147483648L;
    }

    public static int SIG_ATOMIC_MAX() {
        return (int) 2147483647L;
    }

    public static int WINT_MIN() {
        return (int) 0L;
    }

    public static int WINT_MAX() {
        return (int) 65535L;
    }

    public static int WCHAR_MAX() {
        return (int) 65535L;
    }

    public static int WCHAR_MIN() {
        return (int) 0L;
    }
}


